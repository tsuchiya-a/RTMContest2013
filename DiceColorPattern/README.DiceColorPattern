======================================================================
  RTComponent: DiceColorPattern specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  @author 土屋彩茜
   ma14076@shibaura-it.ac.jp

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=DiceColorPattern 
#   --module-desc='Determine LED color based on the input dice number' --module-version=1.0.1 --module-vendor=Ayaka Tsuchiya 
#   --module-category=Category --module-comp-type=COMMUTATIVE 
#   --module-act-type=SPORADIC --module-max-inst=1 
#   --config=Dice1:std::vector<int>:255,0,255 --config=Dice2:std::vector<int>:255,0,0 --config=Dice3:std::vector<int>:255,255,0 --config=Dice4:std::vector<int>:0,255,0 --config=Dice5:std::vector<int>:0,0,255 --config=Dice6:std::vector<int>:255,255,255 
#   --inport=DiceNumber:RTC::TimedShort --outport=DiceColorRGB:RTC::TimedRGBColour 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: DiceColorPattern
Description: Determine LED color based on the input dice number
Version:     1.0.1
Vendor:      Ayaka Tsuchiya
Category:    Category
Kind:        DataFlowComponent
Comp. Type:  COMMUTATIVE
Act. Type:   SPORADIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

Overview:    サイコロの出目を取得し、その目に応じたLEDの色を出力す
             るコンポーネント。
             Configurationで、各目に対して好きな色をRGBで設定するこ
             とが出来る。
             サイコロが動いている間や出目が取得できない場合はLEDを
             消灯させる。
In/Out:      InPort:<name>/<datatype>/<documentation>
             DiceNumber/TimedShort/サイコロの出目を取得するポート。
             1～6がそれぞれサイコロの目に対応しており、それ以外の値
             が来た場合、LEDを消灯させる。
             OutPort: <name>/<datatype>/<documentation>
             DiceColorRGB/TimedRGBColour/LEDの色を出力するポート。
             Configuration:<name>/<datatype>/<default>
             /<widget>/<documentation>
             Dice1/std::vector<int>/255,0,255/text/サイコロの目が1
             の時のLEDの色(RGB)。デフォルト値はmagenta。
             Dice2/std::vector<int>/255,0,0/text/サイコロの目が2の
             時のLEDの色(RGB)。デフォルト値はred。
             Dice3/std::vector<int>/255,255,0/text/サイコロの目が3
             の時のLEDの色(RGB)。デフォルト値はyellow。
             Dice4/std::vector<int>/0,255,0/text/サイコロの目が4の
             時のLEDの色(RGB)。デフォルト値はgreen。
             Dice5/std::vector<int>/0,0,255/text/サイコロの目が5の
             時のLEDの色(RGB)。デフォルト値はblue。
             Dice6/std::vector<int>/255,255,255/text/サイコロの目が
             6の時のLEDの色(RGB)。デフォルト値はwhite。
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]     implemented
	Description:   初期化処理を行う。

[on_deactivated]   implemented
	Description:   LEDを消灯して終了する。

[on_execute]       implemented
	Description:   入力された目に対応したRGBを出力する。

[on_aborting]

[on_error]

[on_reset]

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        DiceNumber
	PortNumber:  0
	Description: サイコロの出目を取得するポート。
	             1～6がそれぞれサイコロの目に対応しており、
	             それ以外の値が来た場合、LEDを消灯させる。
	PortType: 
	DataType:    RTC::TimedShort
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShort
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        DiceColorRGB
	PortNumber:  0
	Description: LEDの色を出力するポート。
	PortType: 
	DataType:    RTC::TimedRGBColour
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedRGBColour
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:            Dice1 Dice1
		Description:     サイコロの目が1の時のLEDの色(RGB)。
		                 デフォルト値はmagenta。
		Type:            std::vector<int>
		DefaultValue:    255,0,255 255,0,255
		Unit:            
		Range:           各項0～255
		Constraint:      表記：R,G,B

		Name:            Dice2 Dice2
		Description:     サイコロの目が2の時のLEDの色(RGB)。
		                 デフォルト値はred。
		Type:            std::vector<int>
		DefaultValue:    255,0,0 255,0,0
		Unit:            
		Range:           各項0～255
		Constraint:      表記：R,G,B

		Name:            Dice3 Dice3
		Description:     サイコロの目が3の時のLEDの色(RGB)。
		                 デフォルト値はyellow。
		Type:            std::vector<int>
		DefaultValue:    255,255,0 255,255,0
		Unit:            
		Range:           各項0～255
		Constraint:      表記：R,G,B

		Name:            Dice4 Dice4
		Description:     サイコロの目が4の時のLEDの色(RGB)。
		                 デフォルト値はgreen。
		Type:            std::vector<int>
		DefaultValue:    0,255,0 0,255,0
		Unit:            
		Range:           各項0～255
		Constraint:      表記：R,G,B

		Name:            Dice5 Dice5
		Description:     サイコロの目が5の時のLEDの色(RGB)。
		                 デフォルト値はblue。
		Type:            std::vector<int>
		DefaultValue:    0,0,255 0,0,255
		Unit:            
		Range:           各項0～255
		Constraint:      表記：R,G,B

		Name:            Dice6 Dice6
		Description:     サイコロの目が6の時のLEDの色(RGB)。
		                 デフォルト値はwhite。
		Type:            std::vector<int>
		DefaultValue:    255,255,255 255,255,255
		Unit:            
		Range:           各項0～255
		Constraint:      表記：R,G,B

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

