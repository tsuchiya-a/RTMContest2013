DiceCalculation - 日本語
=======================


はじめに
========

クラスについては、 `APIドキュメンテーション`_ に参照してください。

.. _`APIドキュメンテーション`:
   doxygen/html/index.html

条件
====

DiceCalculationはOpenRTM-aist 1.0.0以上のC++版が必要です。

DiceCalculationは CMake_ を使います。CMake 2.8以上が必要です。

.. _CMAke:
   http://www.cmake.org

インストール
============

インストーラ
------------

Windowsのユーザはインストーラパッケージを使用してコンポーネントをインストール
することができます。これはコンポーネント及びそのすべての必要なライブラリを
インストールします。Windowsでインストールする場合、インストーラの使用を推奨してます。

- インストーラをダウンロードしてください。
- インストールを始めるためにインストーラをダブルクリックしてください。
- 指示にしたがってコンポーネントをインストールしてください。
- 環境変数の変更を適用するため、コンポーネントを使用する前にコンピューターを
  再起動する必要があるかもしれません。

DiceCalculationは ``DiceCalculationComp`` の実行をダブルクリックして実行することが
できます。あるいは、 ``DiceCalculation`` を初期化関数の ``DiceCalculationInit`` を利用して、
マネージャにロードすることができます。

ソースから
----------

ソースを使う場合は以下の手順でインストールしてください。

- ソースをダウンロードして解凍してください::

    tar -xvzf DiceCalculation-1.0.0.tar.gz

- 解凍されたフォルダに入ってください::

    cd DiceCalculation-1.0.0

- ``build`` フォルダを作ってください::

    mkdir build

- `` build`` フォルダに入ってください::

    cd build

- CMakeを実行してください::

    cmake ../

- エラーが出無い場合、makeを実行してください::

    make

- ``make install`` でコンポーネントをインストールしてください。選択された
  インストール場所に書き込み権限があるかを確認してください::

  ``make install``

- インストールする場所はccmakeを実行して ``CMAKE_INSTALL_PREFIX`` を
  設定することで変更が可能です。

    ccmake ../

ここまでで、コンポーネントが使えるようになりました。コンフィグレーションは次のセクションを
参照してください。

DiceCalculationは ``DiceCalculationComp`` を実行（ ``${prefix}/components/bin`` に
インストールされます）することでスタンドアローンモードで実行することができます。
あるいは、 ``libDiceCalculation.so`` を初期化関数の ``DiceCalculationInit`` を利用して、
マネージャにロードすることができます。このライブラリは ``${prefix}/components/lib`` 
または ``${prefix}/components/lib64`` にインストールされます。


コンフィグレーション
====================

使えるコンフィグレーションパラメータは以下のテーブルを参照
してください。

================ ================== ================ ====
パラメータ       データ型           デフォルト値     意味
================ ================== ================ ====
PlusX            int                1                +X軸方向にある面に対応する目の数値。
PlusY            int                2                +Y軸方向にある面に対応する目の数値。
PlusZ            int                3                Z軸方向にある面に対応する目の数値。
MinusX           int                6                -X軸方向にある面に対応する目の数値。
MinusY           int                5                -Y軸方向にある面に対応する目の数値。
MinusZ           int                4                -Z軸方向にある面に対応する目の数値。
SensorThreshold  double             0.15             重力加速度と入力加速度を比較し、差がこの値より小さい場合、静止していると判断するための閾値。単位はm/s^2。
StopTimeThreshold double             1.0              この時間、静止している状態が続いたら、サイコロが静止状態にあると判断する。単位は秒。
SlopeThreshold   int                15               上面を特定するための閾値。この傾きの角度分を誤差とする。単位は度。範囲は0≤SlopeThreshold<45。
================ ================== ================ ====

ポート
======

コンポーネントによって提供されるポートは以下のテーブルで述べられています。

=============== =========== ============================== ====
ポート名        ポート型    データ型                       意味
=============== =========== ============================== ====
DiceAcceleration InPort      RTC::TimedAcceleration3D       3軸加速度センサから得られた加速度。
DiceNumber      OutPort     RTC::TimedShort                サイコロの出目。サイコロの静止状態が確認され、上面が決定する場合、上面にある目の値を出力する。上面が決定出来ない場合は-1を出力する。静止していない時は0を出力する。
=============== =========== ============================== ====

例
==

例のrtc.confファイルは ``${prefix}/components/share/DiceCalculation/examples/conf/``
フォルダにインストールされています。

Changelog
=========


License
=======

このソフトウェアは産業技術総合研究所で開発されています。承認番号はH23PRO-????
です。このソフトウェアは Lesser General Public License (LGPL) ライセンスとして
公開されてます。COPYING.LESSER を参照してください。

